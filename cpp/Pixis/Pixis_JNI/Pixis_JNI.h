/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cxro_common_device_Pixis_Pixis */

#ifndef _Included_cxro_common_device_Pixis_Pixis
#define _Included_cxro_common_device_Pixis_Pixis
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    Pixis_Init
 * Signature: ([JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_Pixis_1Init
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    Pixis_Uninit
 * Signature: ([J)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_Pixis_1Uninit
  (JNIEnv *, jobject, jlongArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_sensor_size
 * Signature: (J[C)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1sensor_1size
  (JNIEnv *, jobject, jlong, jcharArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    exp_setup
 * Signature: (JIIIIIII[J)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_exp_1setup
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jlongArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    exp_start
 * Signature: (JLjava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_exp_1start
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    exp_check_status
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_exp_1check_1status
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    exp_halt
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_exp_1halt
  (JNIEnv *, jobject, jlong, jshort);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    cont_start
 * Signature: (JIIIIIII[J)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_cont_1start
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jlongArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    cont_check_status
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_cont_1check_1status
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    cont_halt
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_cont_1halt
  (JNIEnv *, jobject, jlong, jshort);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    cont_get_frame
 * Signature: (JLjava/nio/ByteBuffer;)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_cont_1get_1frame
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_error
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cxro_common_device_Pixis_Pixis_get_1error
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_paramList
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_cxro_common_device_Pixis_Pixis_get_1paramList
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_ccs_status
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1ccs_1status
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_shtr_status
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1shtr_1status
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    shtr_open_never
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_shtr_1open_1never
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    shtr_open_normal
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_shtr_1open_1normal
  (JNIEnv *, jobject, jlong);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_shtr_open_dly
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1shtr_1open_1dly
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_shtr_open_dly
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1shtr_1open_1dly
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_shtr_close_dly
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1shtr_1close_1dly
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_shtr_close_dly
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1shtr_1close_1dly
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_clear_cycles
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1clear_1cycles
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_clear_cycles
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1clear_1cycles
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_clear_strips
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1clear_1strips
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_clear_strips
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1clear_1strips
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_tmp
 * Signature: (J[F)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1tmp
  (JNIEnv *, jobject, jlong, jfloatArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_tmp_setpoint
 * Signature: (J[F)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1tmp_1setpoint
  (JNIEnv *, jobject, jlong, jfloatArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_tmp_setpoint
 * Signature: (JF)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1tmp_1setpoint
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_max_gain
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1max_1gain
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_gain
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1gain
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_gain
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1gain
  (JNIEnv *, jobject, jlong, jshort);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_gain_mult_enable
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1gain_1mult_1enable
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_gain_mult_enable
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1gain_1mult_1enable
  (JNIEnv *, jobject, jlong, jshort);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_gain_mult_factor
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1gain_1mult_1factor
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_gain_mult_factor
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1gain_1mult_1factor
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_speed
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1speed
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_speed_entries
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1speed_1entries
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_readout_port_entries
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1readout_1port_1entries
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_bits
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1bits
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_speed_mode
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1speed_1mode
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_speed_mode
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1speed_1mode
  (JNIEnv *, jobject, jlong, jshort);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_readout_port
 * Signature: (J[S)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1readout_1port
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_readout_port
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1readout_1port
  (JNIEnv *, jobject, jlong, jshort);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_retries
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1retries
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_retries
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1retries
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_timeout
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1timeout
  (JNIEnv *, jobject, jlong, jintArray);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    set_timeout
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_set_1timeout
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     cxro_common_device_Pixis_Pixis
 * Method:    get_frame_capable
 * Signature: (J[I)Z
 */
JNIEXPORT jboolean JNICALL Java_cxro_common_device_Pixis_Pixis_get_1frame_1capable
  (JNIEnv *, jobject, jlong, jintArray);

#ifdef __cplusplus
}
#endif
#endif
