// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `_PixisICEDel.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package cxro.common.device.Pixis;

public interface _PixisICEDel extends Ice._ObjectDel
{
    boolean initCamera(int index, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               CamException;

    boolean uninitCamera(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getSensorSize(Ice.ShortHolder xSize, Ice.ShortHolder ySize, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean expSetup(long exposureTime, short x0, short x1, short y0, short y1, short xbin, short ybin, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean expStart(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean expCheckStatus(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean expGetFrame(ImageContainerHolder image, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean expHalt(short camState, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean contStart(long exposureTime, short x0, short x1, short y0, short y1, short xbin, short ybin, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean contCheckStatus(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper,
               CamException;

    boolean contHalt(short camState, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean contGetFrame(ImageContainerHolder image, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getError(Ice.StringHolder error, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getParamList(ParamContainerHolder params, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getCcsStatus(Ice.IntHolder ccsStatus, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getShtrStatus(Ice.ShortHolder shtrStatus, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean shtrOpenNever(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean shtrOpenNormal(java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getShtrOpenDly(Ice.IntHolder shtrOpenDly, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setShtrOpenDly(int shtrOpenDly, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getShtrCloseDly(Ice.IntHolder shtrCloseDly, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setShtrCloseDly(int shtrCloseDly, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getClearCycles(Ice.IntHolder cycles, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setClearCycles(int clearCycles, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getClearStrips(Ice.IntHolder strips, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setClearStrips(int strips, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getTmp(Ice.FloatHolder curTmp, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getTmpSetpoint(Ice.FloatHolder tmpSetpoint, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setTmpSetpoint(float tmpSetpoint, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getMaxGain(Ice.IntHolder maxGain, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getGain(Ice.IntHolder gain, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setGain(int gain, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getGainMultEnable(Ice.IntHolder enabled, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setGainMultEnable(int enabled, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getGainMultFactor(Ice.IntHolder factor, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setGainMultFactor(int factor, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getSpeed(Ice.IntHolder speed, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getSpeedEntries(Ice.IntHolder entries, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getReadoutPortEntries(Ice.IntHolder entries, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getBits(Ice.IntHolder bits, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getSpeedMode(Ice.ShortHolder speed, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setSpeedMode(short speed, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getReadoutPort(Ice.ShortHolder port, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setReadoutport(short port, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getRetries(Ice.IntHolder retries, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setRetries(int retries, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getTimeout(Ice.IntHolder mSec, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean setTimeout(int mSec, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;

    boolean getFrameCapable(Ice.IntHolder frameCapable, java.util.Map<String, String> __ctx)
        throws IceInternal.LocalExceptionWrapper;
}
